version: 2.1

jobs:
  build-controller:
    machine:
        enabled: true
        image: ubuntu-1604:202007-01
    environment:
      GOLANG_VERSION: 1.13.8
      NOTARY_VERSION: 0.6.1
      GOPATH: /home/circleci/go
      GO111MODULE: "on"
      DOCKER_CLI_EXPERIMENTAL: enabled
    working_directory: /home/circleci/go/src/github.com/patoarvizu/residential-dns
    steps:
    - checkout
    - restore_cache:
        keys:
        - residential-dns-golang-cache-{{ checksum "go.sum" }}
    - run:
        name: Install golang
        command: |
          sudo rm -rf /usr/local/go
          curl -Lo go.linux-amd64.tar.gz "https://dl.google.com/go/go${GOLANG_VERSION}.linux-amd64.tar.gz"
          sudo tar -C /usr/local -xzf go.linux-amd64.tar.gz
          mkdir -p ${HOME}/go/bin
          echo 'export PATH="$GOPATH/bin:$PATH"' >> "${BASH_ENV}"
    - run:
        name: Install notary
        command: |
          curl -L https://github.com/theupdateframework/notary/releases/download/v${NOTARY_VERSION}/notary-Linux-amd64 -o notary
          chmod +x notary
          sudo mv notary /usr/local/bin
    - run:
        name: Build controller
        command: |
          sudo apt-get update
          sudo apt-get install qemu-user -y
          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
          docker buildx create --name cci-builder --use
          docker login --username $DOCKER_HUB_USER --password $DOCKER_HUB_ACCESS_TOKEN
          DOCKER_BUILD_ARGS="--build-arg GIT_COMMIT=$CIRCLE_SHA1 --build-arg GIT_TAG=$CIRCLE_TAG --build-arg COMMIT_TIMESTAMP=$(git log -1 --format=%at) --build-arg AUTHOR_EMAIL=$(git log -1 --format=%ae) --build-arg SIGNATURE_KEY=$(git log -1 --format=%GK)"
          VERSION=${CIRCLE_TAG:-latest}
          docker buildx build --progress=plain --platform=linux/amd64 --load $DOCKER_BUILD_ARGS -t patoarvizu/residential-dns:latest-amd64 -t patoarvizu/residential-dns:$CIRCLE_SHA1-amd64 -t patoarvizu/residential-dns:$VERSION-amd64 .
          docker buildx build --progress=plain --platform=linux/arm64 --load $DOCKER_BUILD_ARGS -t patoarvizu/residential-dns:latest-arm64 -t patoarvizu/residential-dns:$CIRCLE_SHA1-arm64 -t patoarvizu/residential-dns:$VERSION-arm64 .
          docker buildx build --progress=plain --platform=linux/arm/v7 --load $DOCKER_BUILD_ARGS -t patoarvizu/residential-dns:latest-arm7 -t patoarvizu/residential-dns:$CIRCLE_SHA1-arm7 -t patoarvizu/residential-dns:$VERSION-arm7 .
          docker push patoarvizu/residential-dns:latest-amd64
          docker push patoarvizu/residential-dns:$CIRCLE_SHA1-amd64
          docker push patoarvizu/residential-dns:$VERSION-amd64
          docker push patoarvizu/residential-dns:latest-arm64
          docker push patoarvizu/residential-dns:$CIRCLE_SHA1-arm64
          docker push patoarvizu/residential-dns:$VERSION-arm64
          docker push patoarvizu/residential-dns:latest-arm7
          docker push patoarvizu/residential-dns:$CIRCLE_SHA1-arm7
          docker push patoarvizu/residential-dns:$VERSION-arm7
          docker buildx build --progress=plain --platform=linux/amd64,linux/arm64,linux/arm/v7 --push $OPERATOR_BUILD_ARGS . -t patoarvizu/residential-dns:latest -t patoarvizu/residential-dns:$CIRCLE_SHA1 -t patoarvizu/residential-dns:$VERSION
          DIGEST=$(docker buildx imagetools inspect patoarvizu/residential-dns:$CIRCLE_SHA1 | grep Digest | cut -d':' -f3)
          LENGTH=$(( $(docker buildx imagetools inspect patoarvizu/residential-dns:$CIRCLE_SHA1 --raw | wc -c) - 1 ))
        no_output_timeout: 30m
    - save_cache:
        key: residential-dns-golang-cache-{{ checksum "go.sum" }}
        paths:
          - /home/circleci/go/pkg/mod/cache

workflows:
  version: 2
  build-controller:
    jobs:
    - build-controller:
        context: authentication-tokens
        filters:
          tags:
            only: /^v\d+\.\d+.\d+$/